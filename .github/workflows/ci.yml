name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Instalar e configurar Conda via Miniforge/Mamba
      - name: Set up Conda (mamba)
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: ogum
          use-mamba: true
          auto-update-conda: true
          miniforge-variant: Miniforge3
          python-version: 3.11

      # 3. Cache dos pacotes Conda
      - name: Cache conda env
        uses: actions/cache@v4
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      # 4. Instalar o pacote & dev‑deps
      - name: Install package + dev deps
        shell: bash -l {0}
        run: |
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate ogum
          pip install -e .
          pip install -r requirements-dev.txt

      # 5. Lint com Ruff
      - name: Lint (ruff)
        shell: bash -l {0}
        run: |
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate ogum
          ruff check --exit-zero src
          ruff format --check src || true

      # 6. Testes + cobertura
      - name: Run tests
        shell: bash -l {0}
        run: |
          source "$(conda info --base)/etc/profile.d/conda.sh"
          conda activate ogum
          pytest --cov=ogum --cov-report=xml

      # 7. Envio da cobertura ao Codecov
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml

      # 8. Autenticação GCP (Workload Identity)
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # 9. Setup gcloud SDK
      - name: Set up GCP SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id:               ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      # 10. Docker + Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker southamerica-east1-docker.pkg.dev --quiet

      # 11. Build & Push Docker image
      - name: Build & Push Docker image
        shell: bash -l {0}
        run: |
          docker build \
            -t southamerica-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ogum/ogumsoftware:latest \
            .
          docker push southamerica-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ogum/ogumsoftware:latest
